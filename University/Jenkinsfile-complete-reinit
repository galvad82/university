pipeline {
    agent any
    tools { 
		maven 'mvn' 
		jdk 'jdk11' 
	}
    stages {
        stage('Scan-package') { 
			steps {
				withSonarQubeEnv(credentialsId: 'jenkins-sonar-token', installationName:'sonar'){
					sh '''
					cd ./University
					mvn clean package sonar:sonar -Dstyle.color=never
					docker rm -f university || true
					docker rmi university:latest || true
					docker build -t university . -f ./dockerfiles/Dockerfile
					cd ./dockerfiles
					docker rm -f keycloak || true
					docker rmi jboss/keycloak:latest || true
					docker rm -f postgres || true
					docker rmi postgres:13.5-alpine || true
					/usr/bin/docker-compose up -d
					docker image prune -f
					docker volume prune -f
					'''
				}
            }
		}
    }
}
